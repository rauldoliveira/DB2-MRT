/#
CREATE OR REPLACE PROCEDURE NULLID.lOCK_NAME

--  CALL NULLID.lOCK_NAME
     
     LANGUAGE SQL
     RESULT SET 1

P1: BEGIN

DECLARE vLockName VARCHAR(30);

DECLARE GLOBAL TEMPORARY TABLE SESSION.MRTLockNameTEMP AS (
        SELECT LOCK_NAME
        FROM TABLE (MON_GET_APPL_LOCKWAIT(NULL, -2)) T
    ) DEFINITION ONLY
           ON COMMIT DELETE ROWS
           NOT LOGGED ON ROLLBACK DELETE ROWS
           WITH REPLACE;
           
DECLARE GLOBAL TEMPORARY TABLE SESSION.MRTResultLockName AS (
        SELECT  'FFFA8000005D07A53314004852' AS LOCK_NAME
            ,MAX(DECODE(L.NAME, 'LOCK_OBJECT_TYPE', L.VALUE)) AS LOCK_OBJECT_TYPE
            ,MAX(DECODE(L.NAME, 'ROWID', L.VALUE)) AS ROW_ID
            ,MAX(DECODE(L.NAME, 'DATA_PARTITION_ID', L.VALUE)) AS DATA_PARTITION_ID
            ,MAX(DECODE(L.NAME, 'PAGEID', L.VALUE)) AS PAGEID
            ,MAX(DECODE(L.NAME, 'TABSCHEMA', L.VALUE)) AS TAB_SCHEMA
            ,MAX(DECODE(L.NAME, 'TABNAME', L.VALUE)) AS TAB_NAME
        FROM TABLE( MON_FORMAT_LOCK_NAME('FFFA8000005D07A53314004852')) as L
    ) DEFINITION ONLY
           ON COMMIT DELETE ROWS
           NOT LOGGED ON ROLLBACK DELETE ROWS
           WITH REPLACE;

INSERT INTO SESSION.MRTLockNameTEMP
SELECT LOCK_NAME
FROM TABLE (MON_GET_APPL_LOCKWAIT(NULL, -2)) T;

WHILE (SELECT COUNT(*) FROM SESSION.MRTLockNameTEMP) > 0
DO
        
        SET vLockName = (SELECT LOCK_NAME FROM SESSION.MRTLockNameTEMP FETCH FIRST 1 ROWS ONLY);
        
        INSERT INTO SESSION.MRTResultLockName
        SELECT vLockName AS Lock_Name 
            ,MAX(DECODE(L.NAME, 'LOCK_OBJECT_TYPE', L.VALUE)) AS LOCK_OBJECT_TYPE
            ,MAX(DECODE(L.NAME, 'ROWID', L.VALUE)) AS ROW_ID
            ,MAX(DECODE(L.NAME, 'DATA_PARTITION_ID', L.VALUE)) AS DATA_PARTITION_ID
            ,MAX(DECODE(L.NAME, 'PAGEID', L.VALUE)) AS PAGEID
            ,MAX(DECODE(L.NAME, 'TABSCHEMA', L.VALUE)) AS TAB_SCHEMA
            ,MAX(DECODE(L.NAME, 'TABNAME', L.VALUE)) AS TAB_NAME
        FROM TABLE(MON_FORMAT_LOCK_NAME(''||vLockName||'')) as L;
        
        DELETE FROM SESSION.MRTLockNameTEMP WHERE LOCK_NAME = vLockName;

END WHILE;

P2: BEGIN

    DECLARE cRet CURSOR WITH RETURN FOR
        SELECT * FROM SESSION.MRTResultLockName;    
    OPEN cReT;
    
END P2;
END P1

#/    

